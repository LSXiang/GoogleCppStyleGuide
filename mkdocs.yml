site_name: 谷歌C++编程风格指南
site_description: 谷歌C++编程风格指南中文翻译版
site_author: Jacob.lsx
site_url: 'https://github.com/LSXiang/GoogleCppStyleGuide'

# Repository
repo_url: 'https://github.com/LSXiang/GoogleCppStyleGuide'

# Copyright
copyright: 'Copyright &copy; 2019. All rights reserved.'

nav:
- 简介: index.md
- 正文: 
  - C++版本: cpp_version.md
  - 头文件: header_files.md

theme: 
  name: 'readthedocs'
  font: false
  language: 'zh'
  navigation_depth: 4
  display_version: true
  feature:
    tabs: true

extra:
  version: 1.0
  search:
    language: 'jp'
  social:
    - type: 'github'
      link: 'https://github.com/LSXiang'

extra_javascript:
  - //cdn.bootcss.com/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML

# Extensions
markdown_extensions:
    # The Abbreviations extension adds the ability to define abbreviations.
    # eg:
    #     The HTML specification is maintained by the W3C
    #     *[HTML]: Hyper Text Markup Language
    #     *[W3C]:  World Wide Web Consortium
  - abbr

    # The Admonition extension adds rST-style admonitions to Markdown documents.
    # directive types: "attention", "caution", "danger", "error", "hint", 
    #                  "important", "note", "tip", "warning", "admonition"
    # eg:
    #     !!! type "optional explicit title within double quotes"
    #     Any number of other indented markdown elements.
    #
    #     This is the second paragraph.
  - admonition

    # The Attribute Lists extension adds a syntax to define attributes on the 
    # various HTML elements in markdown’s output.
  # - attr_list

    # The CodeHilite extension adds code/syntax highlighting to standard 
    # Python-Markdown code blocks using Pygments.
  # - codehilite:
  #     use_pygments: true  # Defaults to True
  #     guess_lang: false   # Automatic language detection， defaults to true.
  #     linenums:         # Use line numbers, 'true' of 'false', defaults to None.
  #     noclasses:        # Use inline styles instead of CSS classes. Defaults to False.
  #     css_class:        # Set CSS class name for the wrapper <div> tag. Defaults to codehilite

    # The Definition Lists extension adds the ability to create definition 
    # lists in Markdown documents.
    # eg:
    #     Apple
    #     :   Pomaceous fruit of plants of the genus Malus in
    #         the family Rosaceae.
  - def_list

    # The Fenced Code Blocks extension adds a secondary way to define code blocks,
    # which overcomes a few limitations of the indented code blocks.
  - fenced_code 
    
    # The Footnotes extension adds syntax for defining footnotes in Markdown documents.
    # eg:
    #     Footnotes[^1] have a label[^@#$%] and the footnote's content.
    #     [^1]: This is a footnote content.
    #     [^@#$%]: A footnote on the label: "@#$%".
  - footnotes

    # The Legacy Attributes extension restores Python-Markdown’s original attribute 
    # setting syntax. Older versions of Python Markdown (prior to 3.0) included built-in
    # and undocumented support for defining attributes on elements. Most users have never
    # made use of the syntax and it has been deprecated in favor of Attribute Lists. 
    # This extension restores the legacy behavior for users who have existing documents 
    # which use the syntax.
  # - legacy_attr

    # The Legacy EM extension restores Markdown’s original behavior for emphasis 
    # and strong syntax when using underscores.
  # - legacy_em 
  
  # The Meta-Data extension adds a syntax for defining meta-data about a document. 
  # It is inspired by and follows the syntax of MultiMarkdown. Currently, this extension
  # does not use the meta-data in any way, but simply provides it as a Meta attribute of
  # a Markdown instance for use by other extensions or directly by your python code.
  - meta

    # The New-Line-to-Break (nl2br) Extension will cause newlines to be treated as hard breaks
    # like StackOverflow and GitHub flavored Markdown do.
  # - nl2br

    # The Sane Lists extension alters the behavior of the Markdown List syntax to be less surprising.
  # - sane_lists

  # The Table of Contents extension generates a Table of Contents from a Markdown document and 
  # adds it into the resulting HTML document.
  - toc:
  #     marker:           # Text to find and replace with the Table of Contents. Defaults to [TOC].
  #     title:            # Title to insert in the Table of Contents’ <div>. Defaults to None
      permalink: true
      baselevel: 1      # Base level for headers. Defaults to 1.
  #     slugify           # Callable to generate anchors.

  - pymdownx.arithmatex
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.critic
  - pymdownx.details
  - pymdownx.emoji:
      emoji_generator: !!python/name:pymdownx.emoji.to_svg
  - pymdownx.inlinehilite
  - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.superfences:
      highlight_code: true
      preserve_tabs: true
      custom_fences:
        - name: math
          class: arithmatex
          format: !!python/name:pymdownx.arithmatex.inline_mathjax_format
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde      
  - pymdownx.keys:

# Google Analytics
google_analytics:
  - !!python/object/apply:os.getenv ["GOOGLE_ANALYTICS_KEY"]
  - auto
